1.FindBugs:查错

工作原理:检查程序生成的class的工具.

界面:独立运行的提供图形界面,很友好,有bug报告.

可用性:大多数提示有用,值得改

插件:
可以设置基本和检查的错误类别.
插件保存设置有问题,我是关闭项目后台修改了配置文件,在装入才成功改了配置的.
bug临时解决: 使用独立的findbugs设置规则,然后到C:\Documents and Settings\XXX\下找.Findbugs_prefs,然后改名覆盖eclipse project下的.fbprefs (先关闭你的project)

配置没有查找功能,不过缩写能让我们很快找到某个规则

2.PMD:主要是查错
工作原理:检查源码
可用性:一部分值得修改,有些过于严格
界面:独立运行的是命令行界面,命令比较简单.
插件:可以配置规则,有一个独立的窗口显示提示,分5级提示,很友好

使用:建立自己的规范,然后用于实际使用中.

3.CheckStyle:主要查代码规范
工作原理:检查源码,对javadoc,书写格式等进行检查.
规则定义:默认的规则是sun的编码规范.不过按照sun的规则则过于严格,而且每个公司也有自己的规范,和sun的不同,所以需要自定义规范. 

4.JTest 重量级的商业工具

不推荐使用,不过功能强大,可以进行代码检查,可以自动生成单元测试和进行单元测试.(不过就是太慢了,而且生成的单元测试没太大用途)

使用感觉:

安装上插件后,对自己的项目进行检查,发现警告太多了,有点发蒙的感觉.不过把警告看一遍,觉得都很有道理,有些也确实是一些错误.
当然PMD和CheckStyle的规范太严格,最后还是配置了一下.

通过改正警告,感觉还是不错,至少可以说自己的代码可以通过工具的检测了.



代码查错推荐使用Findbugs和PMD,代码书写规范推荐使用CheckStyle进行检查.这样不仅能查出一些基本的错误,也能提高项目的代码质量.对提高自己的代码水平也是非常好.